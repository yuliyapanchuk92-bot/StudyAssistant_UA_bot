import sys
print("Python version:", sys.version)

from telegram import (
    Update,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
    InlineKeyboardButton,
    InlineKeyboardMarkup
)
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
    CallbackQueryHandler
)
from PIL import Image
import filetype
import os

# –°—Ç–∞–Ω—ñ –¥–ª—è –∑–±–æ—Ä—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
TYPE, ORDER = range(2)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
TOKEN = os.getenv("TOKEN")
if not TOKEN:
    raise ValueError("Environment variable TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

ADMIN_USERNAME = "Yuliya26_01"
ADMIN_CHAT_ID = None

# –í—ñ—Ç–∞–Ω–Ω—è
WELCOME_TEXT = """–ü—Ä–∏–≤—ñ—Ç üëã –Ø —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å–≤—ñ—Ç—ñ —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–∏—Ö —Ä–æ–±—ñ—Ç!
–¢—É—Ç –º–æ–∂–Ω–∞ –∑–∞–º–æ–≤–∏—Ç–∏ –≤—Å–µ: –≤—ñ–¥ —â–æ–¥–µ–Ω–Ω–∏–∫–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–æ –¥–∏–ø–ª–æ–º–∞ üòé.
–û–±–µ—Ä–∏, –∑ —á–æ–≥–æ –ø–æ—á–Ω–µ–º–æ, —ñ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π ‚Äî —è –Ω–µ —Å—Ç–∞–≤–ª—é –ø‚Äô—è—Ç—ñ—Ä–∫–∏, —Ç—ñ–ª—å–∫–∏ –¥–æ–ø–æ–º–∞–≥–∞—é —ó—Ö –æ—Ç—Ä–∏–º–∞—Ç–∏ üòú
"""

# –í–∏–¥ —Ä–æ–±–æ—Ç–∏ —ñ —Ü—ñ–Ω–∏
WORKS = {
    "–©–æ–¥–µ–Ω–Ω–∏–∫ –ø—Ä–∞–∫—Ç–∏–∫–∏": "üìò –©–æ–¥–µ–Ω–Ω–∏–∫ –ø—Ä–∞–∫—Ç–∏–∫–∏\n- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π ‚Äî 700‚Äì1000 –≥—Ä–Ω\n- –†–æ–∑—à–∏—Ä–µ–Ω–∏–π ‚Äî 1200‚Äì1800 –≥—Ä–Ω",
    "–ó–≤—ñ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏": "üìä –ó–≤—ñ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äî 1000‚Äì2500 –≥—Ä–Ω",
    "–†–µ—Ñ–µ—Ä–∞—Ç": "üìÑ –†–µ—Ñ–µ—Ä–∞—Ç ‚Äî 250‚Äì400 –≥—Ä–Ω",
    "–î–∏–ø–ª–æ–º": "üéì –î–∏–ø–ª–æ–º–Ω–∞ ‚Äî 4000‚Äì8000 –≥—Ä–Ω",
    "–ï—Å–µ": "üìÑ –ï—Å–µ ‚Äî 200‚Äì500 –≥—Ä–Ω",
    "–ö—É—Ä—Å–æ–≤–∞": "üéì –ö—É—Ä—Å–æ–≤–∞ ‚Äî 1500‚Äì3000 –≥—Ä–Ω",
    "–î–°–¢–£": "üìä –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞ –î–°–¢–£ ‚Äî 100‚Äì300 –≥—Ä–Ω",
    "–Ü–Ω—à–µ": "–í–≤–µ–¥—ñ—Ç—å –±—É–¥—å-—è–∫—É —Ä–æ–±–æ—Ç—É –≤—Ä—É—á–Ω—É"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–∏–ø—É —Ñ–∞–π–ª—É —á–µ—Ä–µ–∑ filetype
def get_file_type(file_path: str) -> str:
    kind = filetype.guess(file_path)
    if kind is None:
        return "unknown"
    return kind.extension  # 'jpg', 'png', 'gif' —ñ —Ç.–¥.

# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
def start(update: Update, context: CallbackContext):
    global ADMIN_CHAT_ID
    if ADMIN_CHAT_ID is None:
        ADMIN_CHAT_ID = update.effective_user.id
    keyboard = [[work] for work in WORKS.keys()]
    update.message.reply_text(
        WELCOME_TEXT,
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )

# –ö–æ–º–∞–Ω–¥–∞ /prices
def prices(update: Update, context: CallbackContext):
    text = "\n\n".join([f"{work}:\n{info}" for work, info in WORKS.items()])
    update.message.reply_text(text)

# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –≤–∏–¥—É —Ä–æ–±–æ—Ç–∏
def type_choice(update: Update, context: CallbackContext):
    work = update.message.text
    context.user_data['type'] = work
    info = WORKS.get(work, "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–æ–±–æ—Ç—É –≤—ñ–¥—Å—É—Ç–Ω—è")
    
    keyboard = [[InlineKeyboardButton("–ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑", callback_data="order")]]
    update.message.reply_text(info, reply_markup=InlineKeyboardMarkup(keyboard))
    return TYPE

# –ö–Ω–æ–ø–∫–∞ "–ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑"
def order_callback(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    query.message.reply_text("–í–∫–∞–∂–∏ –±–∞–∂–∞–Ω–∏–π —Ç–µ—Ä–º—ñ–Ω –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 3 –¥–Ω—ñ):", reply_markup=ReplyKeyboardRemove())
    return ORDER

# –ö—Ä–æ–∫ –∑–±–æ—Ä—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: —Ç–µ—Ä–º—ñ–Ω —ñ –∫–æ–Ω—Ç–∞–∫—Ç
def order_details(update: Update, context: CallbackContext):
    text = update.message.text
    if 'deadline' not in context.user_data:
        context.user_data['deadline'] = text
        update.message.reply_text("–ó–∞–ª–∏—à –∫–æ–Ω—Ç–∞–∫—Ç (—ñ–º'—è + —Ç–µ–ª–µ—Ñ–æ–Ω –∞–±–æ email):")
        return ORDER
    else:
        context.user_data['contact'] = text
        summary = (
            f"üîî *–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è*\n\n"
            f"*–ö–ª—ñ—î–Ω—Ç:* @{update.effective_user.username or update.effective_user.full_name}\n"
            f"*–¢–∏–ø —Ä–æ–±–æ—Ç–∏:* {context.user_data['type']}\n"
            f"*–¢–µ—Ä–º—ñ–Ω:* {context.user_data['deadline']}\n"
            f"*–ö–æ–Ω—Ç–∞–∫—Ç:* {context.user_data['contact']}\n"
            f"*UserID:* {update.effective_user.id}"
        )
        context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=summary, parse_mode='Markdown')
        update.message.reply_text("–î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ —ñ –ø–µ—Ä–µ–¥–∞–Ω–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É. –°–∫–æ—Ä–æ –∑ –≤–∞–º–∏ –∑–≤'—è–∂—É—Ç—å—Å—è.")
        return ConversationHandler.END

# –°–∫–∞—Å—É–≤–∞–Ω–Ω—è
def cancel(update: Update, context: CallbackContext):
    update.message.reply_text("–°–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    conv = ConversationHandler(
        entry_points=[MessageHandler(Filters.text & ~Filters.command, type_choice)],
        states={
            TYPE: [CallbackQueryHandler(order_callback, pattern="order")],
            ORDER: [MessageHandler(Filters.text & ~Filters.command, order_details)]
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    dp.add_handler(conv)
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CommandHandler('prices', prices))
    dp.add_handler(CommandHandler('help', lambda u, c: u.message.reply_text("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ–Ω—é –∞–±–æ /start, /prices")))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
