from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler, CallbackContext, CallbackQueryHandler
from PIL import Image
import os

# –°—Ç–∞–Ω—ñ –¥–ª—è –∑–±–æ—Ä—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
TYPE, ORDER = range(2)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
TOKEN = os.getenv("TOKEN")  # –±–µ—Ä–µ–º–æ —Ç–æ–∫–µ–Ω –∑ Environment Variables
ADMIN_USERNAME = "Yuliya26_01"
ADMIN_CHAT_ID = None  # –≤–∏–∑–Ω–∞—á–∏–º–æ –∑–∞ username –ø—ñ—Å–ª—è —Å—Ç–∞—Ä—Ç—É

# –í—ñ—Ç–∞–Ω–Ω—è
WELCOME_TEXT = """–ü—Ä–∏–≤—ñ—Ç üëã –Ø —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å–≤—ñ—Ç—ñ —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–∏—Ö —Ä–æ–±—ñ—Ç!
–¢—É—Ç –º–æ–∂–Ω–∞ –∑–∞–º–æ–≤–∏—Ç–∏ –≤—Å–µ: –≤—ñ–¥ —â–æ–¥–µ–Ω–Ω–∏–∫–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–æ –¥–∏–ø–ª–æ–º–∞ üòé.
–û–±–µ—Ä–∏, –∑ —á–æ–≥–æ –ø–æ—á–Ω–µ–º–æ, —ñ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π ‚Äî —è –Ω–µ —Å—Ç–∞–≤–ª—é –ø‚Äô—è—Ç—ñ—Ä–∫–∏, —Ç—ñ–ª—å–∫–∏ –¥–æ–ø–æ–º–∞–≥–∞—é —ó—Ö –æ—Ç—Ä–∏–º–∞—Ç–∏ üòú
"""

# –í–∏–¥ —Ä–æ–±–æ—Ç–∏ —ñ —Ü—ñ–Ω–∏
WORKS = {
    "–©–æ–¥–µ–Ω–Ω–∏–∫ –ø—Ä–∞–∫—Ç–∏–∫–∏": "üìò –©–æ–¥–µ–Ω–Ω–∏–∫ –ø—Ä–∞–∫—Ç–∏–∫–∏\n- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π (10‚Äì20 –¥–Ω—ñ–≤) ‚Äî 700‚Äì1000 –≥—Ä–Ω, 1‚Äì2 –¥–Ω—ñ\n- –†–æ–∑—à–∏—Ä–µ–Ω–∏–π ‚Äî 1200‚Äì1800 –≥—Ä–Ω, 2‚Äì3 –¥–Ω—ñ\n- –ü—ñ–¥ –∫–ª—é—á ‚Äî 2000‚Äì3500 –≥—Ä–Ω, 2‚Äì4 –¥–Ω—ñ",
    "–ó–≤—ñ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏": "üìä –ó–≤—ñ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äî 1000‚Äì2500 –≥—Ä–Ω, 2‚Äì3 –¥–Ω—ñ",
    "–†–µ—Ñ–µ—Ä–∞—Ç": "üìÑ –†–µ—Ñ–µ—Ä–∞—Ç (5‚Äì10 —Å—Ç–æ—Ä—ñ–Ω–æ–∫) ‚Äî 250‚Äì400 –≥—Ä–Ω, 1 –¥–µ–Ω—å",
    "–î–∏–ø–ª–æ–º": "üéì –î–∏–ø–ª–æ–º–Ω–∞ ‚Äî 4000‚Äì8000 –≥—Ä–Ω, 10‚Äì20 –¥–Ω—ñ–≤\n–ü—ñ–¥ –∫–ª—é—á ‚Äî 9000‚Äì12000 –≥—Ä–Ω, 10‚Äì25 –¥–Ω—ñ–≤",
    "–ï—Å–µ": "üìÑ –ï—Å–µ ‚Äî 200‚Äì300 –≥—Ä–Ω, 1 –¥–µ–Ω—å\n–ï—Å–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é ‚Äî 300‚Äì500 –≥—Ä–Ω, 1‚Äì2 –¥–Ω—ñ",
    "–ö—É—Ä—Å–æ–≤–∞": "üéì –ö—É—Ä—Å–æ–≤–∞ ‚Äî 1500‚Äì3000 –≥—Ä–Ω, 5‚Äì7 –¥–Ω—ñ–≤",
    "–î–°–¢–£": "üìä –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞ –î–°–¢–£ ‚Äî 100‚Äì300 –≥—Ä–Ω",
    "–Ü–Ω—à–µ": "–í–≤–µ–¥—ñ—Ç—å –±—É–¥—å-—è–∫—É —Ä–æ–±–æ—Ç—É –≤—Ä—É—á–Ω—É"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç—É –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–∑–∞–º—ñ–Ω—é—î imghdr)
def get_image_type(file_path):
    with Image.open(file_path) as img:
        return img.format.lower()  # 'jpeg', 'png' —ñ —Ç.–¥.

# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
def start(update: Update, context: CallbackContext):
    global ADMIN_CHAT_ID
    if ADMIN_CHAT_ID is None:
        ADMIN_CHAT_ID = update.effective_user.id
    keyboard = [[work] for work in WORKS.keys()]
    update.message.reply_text(
        WELCOME_TEXT,
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )

# –ö–æ–º–∞–Ω–¥–∞ /prices
def prices(update: Update, context: CallbackContext):
    text = "\n\n".join([f"{work}:\n{info}" for work, info in WORKS.items()])
    update.message.reply_text(text)

# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –≤–∏–¥—É —Ä–æ–±–æ—Ç–∏
def type_choice(update: Update, context: CallbackContext):
    work = update.message.text
    context.user_data['type'] = work
    info = WORKS.get(work, "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–æ–±–æ—Ç—É –≤—ñ–¥—Å—É—Ç–Ω—è")
    
    keyboard = [[InlineKeyboardButton("–ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑", callback_data="order")]]
    update.message.reply_text(info, reply_markup=InlineKeyboardMarkup(keyboard))
    return TYPE

# –ö–Ω–æ–ø–∫–∞ "–ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑"
def order_callback(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    query.message.reply_text("–í–∫–∞–∂–∏ –±–∞–∂–∞–Ω–∏–π —Ç–µ—Ä–º—ñ–Ω –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 3 –¥–Ω—ñ):", reply_markup=ReplyKeyboardRemove())
    return ORDER

# –ö—Ä–æ–∫ –∑–±–æ—Ä—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: —Ç–µ—Ä–º—ñ–Ω —ñ –∫–æ–Ω—Ç–∞–∫—Ç
def order_details(update: Update, context: CallbackContext):
    text = update.message.text
    if 'deadline' not in context.user_data:
        context.user_data['deadline'] = text
        update.message.reply_text("–ó–∞–ª–∏—à –∫–æ–Ω—Ç–∞–∫—Ç (—ñ–º'—è + —Ç–µ–ª–µ—Ñ–æ–Ω –∞–±–æ email):")
        return ORDER
    else:
        context.user_data['contact'] = text
        summary = (
            f"üîî *–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è*\n\n"
            f"*–ö–ª—ñ—î–Ω—Ç:* @{update.effective_user.username or update.effective_user.full_name}\n"
            f"*–¢–∏–ø —Ä–æ–±–æ—Ç–∏:* {context.user_data['type']}\n"
            f"*–¢–µ—Ä–º—ñ–Ω:* {context.user_data['deadline']}\n"
            f"*–ö–æ–Ω—Ç–∞–∫—Ç:* {context.user_data['contact']}\n"
            f"*UserID:* {update.effective_user.id}"
        )
        context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=summary, parse_mode='Markdown')
        update.message.reply_text("–î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ —ñ –ø–µ—Ä–µ–¥–∞–Ω–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É. –°–∫–æ—Ä–æ –∑ –≤–∞–º–∏ –∑–≤'—è–∂—É—Ç—å—Å—è.")
        
        if 'orders' not in context.bot_data:
            context.bot_data['orders'] = {}
        order_id = len(context.bot_data['orders']) + 1
        context.bot_data['orders'][order_id] = {
            'user_id': update.effective_user.id,
            'type': context.user_data['type'],
            'deadline': context.user_data['deadline'],
            'contact': context.user_data['contact']
        }
        context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=f"–©–æ–± –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –∫–ª—ñ—î–Ω—Ç—É, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –≤ —Ü–µ–π —á–∞—Ç –∫–æ–º–∞–Ω–¥—É:\n/reply {order_id} –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
        )
        return ConversationHandler.END

# –°–∫–∞—Å—É–≤–∞–Ω–Ω—è
def cancel(update: Update, context: CallbackContext):
    update.message.reply_text("–°–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º—ñ–Ω–∞ /reply
def admin_reply(update: Update, context: CallbackContext):
    if update.effective_chat.id != ADMIN_CHAT_ID:
        update.message.reply_text("–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—É.")
        return
    args = context.args
    if len(args) < 2:
        update.message.reply_text("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /reply <order_id> <–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è>")
        return
    try:
        order_id = int(args[0])
    except:
        update.message.reply_text("–ù–µ–≤—ñ—Ä–Ω–∏–π order_id.")
        return
    if order_id not in context.bot_data.get('orders', {}):
        update.message.reply_text("Order_id –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return
    text = ' '.join(args[1:])
    user_id = context.bot_data['orders'][order_id]['user_id']
    context.bot.send_message(chat_id=user_id, text=f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n\n{text}")
    update.message.reply_text("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–ª—ñ—î–Ω—Ç—É.")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    conv = ConversationHandler(
        entry_points=[MessageHandler(Filters.text & ~Filters.command, type_choice)],
        states={
            TYPE: [CallbackQueryHandler(order_callback, pattern="order")],
            ORDER: [MessageHandler(Filters.text & ~Filters.command, order_details)]
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    dp.add_handler(conv)
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CommandHandler('prices', prices))
    dp.add_handler(CommandHandler('reply', admin_reply))
    dp.add_handler(CommandHandler('help', lambda u, c: u.message.reply_text("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ–Ω—é –∞–±–æ /start, /prices, /reply")))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()

